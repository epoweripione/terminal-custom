# https://github.com/Dreamacro/clash
# Manager from web UI(RESTful API): http://clash.razord.top/ or http://yacd.haishan.me/
# port of HTTP
port: 7890

# port of SOCKS5
socks-port: 7891

# redir port for Linux and macOS
redir-port: 7892

allow-lan: false

## Only applicable when setting allow-lan to true
## "*": bind all IP addresses
## 192.168.122.11: bind a single IPv4 address
## "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
# bind-address: "*"

# Rule / Global/ Direct (default is Rule)
mode: Rule

## set log level to stdout (default is info)
## info / warning / error / debug / silent
log-level: info

## RESTful API for clash
external-controller: 127.0.0.1:9090

## you can put the static web resource (such as clash-dashboard) to a directory, and clash would serve in `${API}/ui`
## input is a relative path to the configuration directory or an absolute path
# external-ui: folder

## Secret for RESTful API (Optional)
secret: ""

# experimental feature
experimental:
  ignore-resolve-fail: true # ignore dns resolve fail, default value is true

## authentication of local SOCKS5/HTTP(S) server
# authentication:
#   - "user1:pass1"
#   - "user2:pass2"

## experimental hosts, support wildcard (e.g. *.clash.dev Even *.foo.*.example.com)
## static domain has a higher priority than wildcard domain (foo.example.com > *.example.com)
# hosts:
#   '*.clash.dev': 127.0.0.1
#   'alpha.clash.dev': '::1'

# dns:
#   enable: true
#   ipv6: false
#   listen: 0.0.0.0:53
#   enhanced-mode: redir-host # 模式：redir-host 或 fake-ip
#   # fake-ip-range: 198.18.0.1/16 # 如果你不知道这个参数的作用，请勿修改
#   fake-ip-filter: # fake ip white domain list
#     - '*.lan'
#     - localhost.ptlogin2.qq.com
#   nameserver:
#     - 223.5.5.5 # 阿里DNS
#     - 180.76.76.76 # 百度DNS
#     - 119.29.29.29 # 腾讯DNS
#     - 117.50.10.10 # ONE DNS纯净版
#     - 114.114.114.114 # 114DNS
#     - tls://dns.rubyfish.cn:853 # dns over tls
#     - https://1.1.1.1/dns-query # dns over https
#   fallback: # concurrent request with nameserver, fallback used when GEOIP country isn't CN
#     - 8.8.8.8 # 谷歌DNS
#     - 1.1.1.1 # Cloudflare DNS
#     - tls://dns.rubyfish.cn:853
#     - tls://1.0.0.1:853
#     - tls://dns.google:853
#     # - https://dns.rubyfish.cn/dns-query
#     # - https://cloudflare-dns.com/dns-query
#     # - https://dns.google/dns-query
#   fallback-filter:
#     geoip: true # 默认
#     ipcidr: # 在这个网段内的 IP 地址会被考虑为被污染的 IP
#       - 240.0.0.0/4

# 1. clash DNS 请求逻辑：
#   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。
#   (2) clash 将选取 nameserver 列表内，解析最快的结果。
#   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。
#   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。
#   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。
# 2. clash DNS 配置注意事项：
#   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。
#   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。
# 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
#   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。
#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。
#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。
#   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。

# Clash for Windows
cfw-bypass:
# [CFW_BYPASS]https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GeneralClashConfig.yml

# Proxies module latency test settings(ms)
cfw-latency-timeout: 3000
cfw-latency-url: http://www.gstatic.com/generate_204

# Identify strategy of breaking connections after switching to a new proxy/profile/mode
# Options for proxy: none, chain(proxy group in connection chains), all
# Options for profile: true, false
# Options for mode: true, false
cfw-conn-break-strategy:
  proxy: none
  profile: true
  mode: false

# Run child process after CFW started
# Refer: https://docs.cfw.lbyczf.com/contents/childprocess.html
# cfw-child-process: []
cfw-child-process:
  - command: trojan.exe
    args:
      - "-c"
      - "trojan_55980.json"
    options:
      cwd: C:\Tools\trojan

# Will be ignored after profile selection
Proxy:
# [PROXY_CUSTOM]

# [PROXY]

Proxy Group:
  ## url-test select which proxy will be used by benchmarking speed to a URL.
  ## name = url-test, [proxys], url, interval(second)
  # - name: auto
  #   type: url-test
  #   proxies:
  #     - trojan
  #     - v2ray
  #   url: "http://www.gstatic.com/generate_204"
  #   interval: 300

  ## fallback select an available policy by priority.
  ## The availability is tested by accessing an URL, just like an auto url-test group.
  # - name: fallback-auto
  #   type: fallback
  #   proxies:
  #     - trojan
  #     - v2ray
  #   url: "http://www.gstatic.com/generate_204"
  #   interval: 300

  ## load-balance: The request of the same eTLD will be dial on the same proxy.
  # - name: load-balance
  #   type: load-balance
  #   proxies:
  #     - trojan
  #     - v2ray
  #   url: "http://www.gstatic.com/generate_204"
  #   interval: 300

  ## select is used for selecting proxy or proxy group
  ## you can use RESTful API to switch proxy, is recommended for use in GUI.
  # - name: Proxy
  #   type: select
  #   proxies:
  #     - trojan
  #     - v2ray
  #     - auto
  #     - fallback-auto
  #     - load-balance

# [PROXY_GROUP]

# https://github.com/ACL4SSR/ACL4SSR
Rule:
# [RULES]http://127.0.0.1:25500/sub?target=clash&url=https%3A%2F%2Fjiang.netlify.com%2F&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fpref.ini
